;; ┌─────────────────────────────────────────────────────────────┐
;; │░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░│
;; │░█▀█░█▀█░█░░░█░█░█▀▄░█▀█░█▀▄░░░░░░░░░█▀▀░█▀█░█▀█░█▀▀░▀█▀░█▀▀░│
;; │░█▀▀░█░█░█░░░░█░░█▀▄░█▀█░█▀▄░░░░▀░░░░█░░░█░█░█░█░█▀▀░░█░░█░█░│
;; │░▀░░░▀▀▀░▀▀▀░░▀░░▀▀░░▀░▀░▀░▀░░░░▀░░░░▀▀▀░▀▀▀░▀░▀░▀░░░▀▀▀░▀▀▀░│
;; │░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░│
;; └─────────────────────────────────────────────────────────────┘

;; Global WM Settings
[global/wm]
margin-bottom = 0
margin-top = 0

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

;; File Inclusion ; include an external file, like module file, etc.
include-file = ~/.config/polybar/modules.ini
include-file = ~/.config/polybar/colors.ini 

;; Bar Settings
[bar/bar]
; Use either of the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ polybar -m | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
monitor =

; monitor-fallback =

monitor-strict = false

override-redirect = true

bottom = false

fixed-center = true

width = 80%
height = 30

offset-x = 10%
offset-y = 0

; Background ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = ${color.bg}

; Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${color.fg}

; radius-{top,bottom}
radius-top = 10.0
radius-bottom = 10.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
underline-size = 2
underline-color = ${color.fg}

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 3

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin-left = 1
module-margin-right = 1

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
font-0 = "Hack Nerd Font:size=10;2"
font-1 = "Hack Nerd Font:size=10;2"
font-2 = "Hack Nerd Font:size=15;4"
font-3 = "Hack Nerd Font:size=12;2"

; Modules are added to one of the available blocks
modules-left = launcher i3 
modules-center = spotify
modules-right = cpu1 memory2 alsa battery date

; The separator will be inserted between the output of each module
separator = " | "

; Value to be used to set the WM_NAME atom
; If the vae is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
wm-name = i3

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
; locale = 

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
wm-restack = i3

; Set a DPI values used when rendering text
; This only affects scalable fonts
; dpi = 

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = true

; Fallback click handlers that will be called if
; there's no matching module handler found.
; click-left = 
; click-middle = 
; click-right =
; double-click-left =
; double-click-middle =
; double-click-right =

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling

; cursor-click =
; cursor-scroll =

;i3
scroll-up = i3wm-wsnext
scroll-down = i3wm-wsprev

;; Application Settings
[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10

; Time in milliseconds that the input handler will wait between processing events
;throttle-input-for = 30

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = true

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Define fallback values used by all module formats
; format-foreground = 
; format-background = 
; format-underline =
; format-overline =
; format-spacing =
; false format-padding =
; format-margin =
; format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
; pseudo-transparency = true

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
